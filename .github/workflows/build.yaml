name: Build Ubports Images

on: 
  push:
    branches:
      - master
  release:
    types: [published]

jobs:

  build_a5:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Build A5
      run: |
        sudo apt-get update
        sudo apt install android-tools-mkbootimg jq ccache img2simg bc bison \
        build-essential ca-certificates cpio curl flex git kmod \
        libssl-dev libtinfo5 python2 sudo unzip wget xz-utils -y --no-install-recommends
        sudo ln -sf python2.7 /usr/bin/python
        ln -s deviceinfo-a5y17lte deviceinfo
        ./build.sh
        DEVICE="$(source deviceinfo && echo $deviceinfo_codename)"
        ./build/prepare-fake-ota.sh out/device_a5y17lte.tar.xz ota
        mkdir -p out
        ./build/system-image-from-ota.sh ota/ubuntu_command out
        mv out/rootfs.img a5_installer/data/ubuntu.img
        mv out/boot.img a5_installer/boot.img
        wget https://sourceforge.net/projects/exynos7880/files/vendor/vendor_a5.img/download -O a5_installer/data/vendor.img
        cd a5_installer
        zip -r -y -9 ../ubports-a5y17lte-devel-`date +%Y%m%d`.zip .
      shell: bash
    - name: upload A5 images
      uses: actions/upload-artifact@master
      with:
        name: ubports-a5y17lte-devel
        path: |
          ubports-a5y17lte-*.zip
    - uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latestA5"
        prerelease: true
        title: "Development Build"
        files: |
          ubports-a5y17lte-*.zip

  build_a7:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Build A7
      run: |
        sudo apt-get update
        sudo apt install android-tools-mkbootimg jq ccache img2simg bc bison \
        build-essential ca-certificates cpio curl flex git kmod \
        libssl-dev libtinfo5 python2 sudo unzip wget xz-utils -y --no-install-recommends
        sudo ln -sf python2.7 /usr/bin/python
        ln -s deviceinfo-a7y17lte deviceinfo
        ./build.sh
        DEVICE="$(source deviceinfo && echo $deviceinfo_codename)"
        ./build/prepare-fake-ota.sh out/device_a7y17lte.tar.xz ota
        mkdir -p out
        ./build/system-image-from-ota.sh ota/ubuntu_command out
        mv out/rootfs.img a7_installer/data/ubuntu.img
        mv out/boot.img a7_installer/boot.img
        wget https://sourceforge.net/projects/exynos7880/files/vendor/vendor_a7.img/download -O a7_installer/data/vendor.img
        cd a7_installer
        zip -r -y -9 ../ubports-a7y17lte-devel-`date +%Y%m%d`.zip .
      shell: bash
    - name: upload A7 images
      uses: actions/upload-artifact@master
      with:
        name: ubports-a7y17lte-devel
        path: |
          ubports-a7y17lte-*.zip
    - uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latestA7"
        prerelease: true
        title: "Devel Build"
        files: |
          ubports-a7y17lte-*.zip
